<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>

    <display-name>OnlineOder WebSite</display-name>

    <!-- to connect the dispatcher servlet and applicationContext -->
    <!--    IoC容器内所需要托管的类也就是bean所在的地址，要去/WEB-INF/onlineOrder-servlet.xml文件下适配-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/onlineOrder-servlet.xml
        </param-value>
    </context-param>
    <!--    springSecurity类的地址-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <!--    SpringSecurity在哪个url路径下执行，/*代表全路径-->
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- it is used to listen the contextloader -->
    <!--    监听器，构建根IoC容器-->
    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>
    <!--    构建子IoC容器-->
    <servlet>
        <servlet-name>onlineOrder</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    </servlet>
    <!--    子IoC容器也是DispatcherServlet所要接受请求，所管控的url路径为/,这个和Tomcat的路径一样，这个路径下可以-->
    <!--    执行controller等IoC子容器的方法-->
    <!--    tomcat与DispatcherServlet的关系？-->
    <servlet-mapping>
        <servlet-name>onlineOrder</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

</web-app>
